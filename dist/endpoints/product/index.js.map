{"version":3,"sources":["../../../lib/endpoints/product/index.es6"],"names":["express","require","getGenericRepoIns","getServiceInstance","uuid","isMyJsonValid","getGenericValidatorInstance","UniqueIdService","mwDeletePayloadValidation","logger","NODE_ENV","process","env","nodeEnv","config","Object","freeze","dbService","uniqueIdServiceIns","getGenericValidatorIns","productServiceIns","router","Router","rootRoute","route","paramRoute","paramAddRemoveQtyRoute","get","retrieveProducts","bind","post","createProduct","retrieveProductById","put","updateProductById","delete","deleteProductById","patch","addOrRemoveProductQty","module","exports"],"mappings":";;AACA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AAAA,IACEC,oBAAoBD,QAAQ,iCAAR,CADtB;AAAA,IAEEE,qBAAqBF,QAAQ,kBAAR,CAFvB;AAAA,IAGEG,OAAOH,QAAQ,MAAR,CAHT;AAAA,IAIEI,gBAAgBJ,QAAQ,kBAAR,CAJlB;AAAA,IAKEK,8BAA8BL,QAAQ,gCAAR,CALhC;AAAA,IAMEM,kBAAkBN,QAAQ,4BAAR,CANpB;AAAA,IAOEO,4BAA4BP,QAAQ,qDAAR,CAP9B;AAAA,IAQEQ,SAASR,QAAQ,sBAAR,CARX;;AAUI,IAACS,QAAD,GAAaC,QAAQC,GAArB,CAACF,QAAD;AAAA,IACFG,OADE,GACQH,YAAY,OADpB;AAAA,IAEFI,MAFE,GAEOC,OAAOC,MAAP,CAAcf,QAAQ,qBAAqBY,OAA7B,CAAd,CAFP;AAAA,IAGFI,SAHE,GAGUf,kBAAkBY,MAAlB,EAA0BL,MAA1B,CAHV;AAAA,IAIFS,kBAJE,GAImB,IAAIX,eAAJ,CAAoBH,IAApB,CAJnB;AAAA,IAKFe,sBALE,GAKuBb,4BAA4B,EAAC,mBAAmBD,aAApB,EAA5B,CALvB;AAAA,IAMFe,iBANE,GAMkBjB,mBAAmBc,SAAnB,EAA8BE,sBAA9B,EAAsDD,kBAAtD,EAA0ET,MAA1E,CANlB;AAAA,IAOFY,MAPE,GAOOrB,QAAQsB,MAAR,EAPP;AAAA,IAQFC,SARE,GAQUF,OAAOG,KAAP,CAAa,GAAb,CARV;AAAA,IASFC,UATE,GASWJ,OAAOG,KAAP,CAAa,MAAb,CATX;AAAA,IAUFE,sBAVE,GAUuBL,OAAOG,KAAP,CAAa,mBAAb,CAVvB;;;AAYJD,UACGI,GADH,CACOP,kBAAkBQ,gBAAlB,CAAmCC,IAAnC,CAAwCT,iBAAxC,CADP;;AAGAG,UACGO,IADH,CACQV,kBAAkBW,aAAlB,CAAgCF,IAAhC,CAAqCT,iBAArC,CADR;;AAGAK,WACGE,GADH,CACOP,kBAAkBY,mBAAlB,CAAsCH,IAAtC,CAA2CT,iBAA3C,CADP;;AAGAK,WACGQ,GADH,CACOb,kBAAkBc,iBAAlB,CAAoCL,IAApC,CAAyCT,iBAAzC,CADP;;AAGAK,WACGU,MADH,CACU3B,yBADV,EAEG2B,MAFH,CAEUf,kBAAkBgB,iBAAlB,CAAoCP,IAApC,CAAyCT,iBAAzC,CAFV;;AAIAM,uBACGW,KADH,CACSjB,kBAAkBkB,qBAAlB,CAAwCT,IAAxC,CAA6CT,iBAA7C,CADT;;AAGAmB,OAAOC,OAAP,GAAiBnB,MAAjB","file":"index.js","sourcesContent":["\nconst express = require(\"express\"),\n  getGenericRepoIns = require(\"../../generic/GenericRepository\"),\n  getServiceInstance = require(\"./ProductService\"),\n  uuid = require(\"uuid\"),\n  isMyJsonValid = require(\"is-my-json-valid\"),\n  getGenericValidatorInstance = require(\"../../generic/GenericValidator\"),\n  UniqueIdService = require(\"../../util/UniqueIdService\"),\n  mwDeletePayloadValidation = require(\"../../middleware_services/mwDeletePayloadValidation\"),\n  logger = require(\"../../util/ApiLogger\");\n\nlet {NODE_ENV} = process.env,\n  nodeEnv = NODE_ENV || \"local\",\n  config = Object.freeze(require(\"../../../config/\" + nodeEnv)),\n  dbService = getGenericRepoIns(config, logger),\n  uniqueIdServiceIns = new UniqueIdService(uuid),\n  getGenericValidatorIns = getGenericValidatorInstance({\"schemaValidator\": isMyJsonValid}),\n  productServiceIns = getServiceInstance(dbService, getGenericValidatorIns, uniqueIdServiceIns, logger),\n  router = express.Router(),\n  rootRoute = router.route(\"/\"),\n  paramRoute = router.route(\"/:id\"),\n  paramAddRemoveQtyRoute = router.route(\"/:id/addRemoveQty\");\n\nrootRoute\n  .get(productServiceIns.retrieveProducts.bind(productServiceIns));\n\nrootRoute\n  .post(productServiceIns.createProduct.bind(productServiceIns));\n\nparamRoute\n  .get(productServiceIns.retrieveProductById.bind(productServiceIns));\n\nparamRoute\n  .put(productServiceIns.updateProductById.bind(productServiceIns));\n\nparamRoute\n  .delete(mwDeletePayloadValidation)\n  .delete(productServiceIns.deleteProductById.bind(productServiceIns));\n\nparamAddRemoveQtyRoute\n  .patch(productServiceIns.addOrRemoveProductQty.bind(productServiceIns));\n\nmodule.exports = router;\n"]}